---
import { getImage } from "astro:assets";
import { type CollectionEntry } from "astro:content";
import { SEO } from "astro-seo";

// component import
import siteData from "@config/siteData.json";

interface BaseProps {
	title: string;
	description: string;
	noindex?: boolean;
}

interface GenProps extends BaseProps {
	type: "general" | undefined;
	image?: ImageMetadata;
}

const { title = "general", description, image, noindex = false } = Astro.props as GenProps;

let optimizedImage;
const canonicalUrl = new URL(Astro.url.pathname, Astro.site);

// if this is a blog page we do things differently
if (image) {
	optimizedImage = await getImage({
		src: image,
		format: "webp",
		quality: "high",
		width: 1200,
	});
}

function trimEndSlash(str: string) {
	if (str[str.length - 1] === "/") {
		return str.slice(0, -1);
	} else {
		return str;
	}
}

// put together the image URL
const imageUrl =
	trimEndSlash(Astro.site?.toString() || "") + (optimizedImage?.src || siteData.defaultImage.src);
---

<SEO
	title={title}
	description={description}
	canonical={canonicalUrl.toString()}
	openGraph={{
		basic: {
			title: title,
			type: "website",
			image: imageUrl,
			url: canonicalUrl.toString(),
		},
		optional: {
			description: description,
			siteName: siteData.title,
		},
		image: {
			type: "image/webp",
			width: optimizedImage?.attributes.width || "1200",
			height: optimizedImage?.attributes.height || "800",
			alt: title,
		},
	}}
	twitter={{
		site: "@" + siteData.author.twitter,
		creator: "@" + siteData.author.twitter,
		card: "summary_large_image",
		title: title,
		description: description,
		image: imageUrl,
	}}
	noindex={noindex}
	nofollow={noindex}
/>
